# ------------------------------------------
# extract command
# ------------------------------------------
SCRIPT_DIR=母艦パス
ROOT_DIR=SCRIPT_DIRからパス抽出
「ROOT=」&ROOT_DIRを表示
# ------------------------------------------
RES=""
# ------------------------------------------
# lexer.rs
# ------------------------------------------
L=「{SCRIPT_DIR}/lexer.rs」を開く。
Lから「<CHAR_COMMANDS>」を切り取る。
CMD_LIST=対象から「</CHAR_COMMANDS>」を切り取る。
CMD_LIST=CMD_LIST&改行。
CMD_LISTをコマンド変換処理してRES_1CHARに代入。

# ------------------------------------------
# ストトン表記 - sutoton.rs
# ------------------------------------------
CMD_LIST=""
L=「{SCRIPT_DIR}/sutoton.rs」を開く。
Lから「<SUTOTON>」を切り取る。
S_LIST=対象から「</SUTOTON>」を切り取る。
S_LISTを改行で区切って反復
　　S=対象。
　　Ｓで「items.set_item」が何文字目。
　　もし、それ＝0ならば、続ける。
　　それはＳ。
　　Sを「// @」で区切ってITに代入。
　　S説明＝(IT[1])をトリム
　　それはIT[0]
　　「items.set_item(」を「」に置換
　　「);」を「」に置換。
　　トリム
　　Ｓ＝それ
　　SS=Ｓを「,」で区切る。
　　Ｓ名前＝トリム（SS[0]）
　　Ｓ定義＝トリム(ＳＳ[1])
　　Ｓ＝S名前＆「=> // @ {S説明}(={S定義}) 」
　　# Ｓを表示。
　　CMD_LIST=CMD_LIST&S&改行。
ここまで。
CMD_LISTをコマンド変換処理してRES_SUTOTONに代入。

# ------------------------------------------
# 音色 - mml_def.rs
# ------------------------------------------
RES=""
L=「{SCRIPT_DIR}/mml_def.rs」を開く。
Lの「<VARIABLES>」から「</VARIABLES>」まで範囲切り取って、S_LISTに代入。
S_LISTを改行で区切って反復
　　対象を『/"(.+?)".*\((\d+|\".+?\").*\/\/ \@(.+?)$/』で正規表現マッチ。
　　もし、そうでなければ、続ける。
　　KEY=抽出文字列[0]
　　VAL=抽出文字列[1]
　　DESC=抽出文字列[2]
　　RES=RES&「| {KEY} | {DESC} (値:{VAL}) |」&改行。
ここまで。
RES_VOICE=RES
# ------------------------------------------
RES=""
Lの「<RHYTHM_MACRO>」から「</RHYTHM_MACRO>」を範囲切り取る。S_LISTに代入。
S_LISTを改行で区切って反復
　　対象を『/'(.)'.*:from\((".+?")/』で正規表現マッチ。
　　もし、そうでなければ、続ける。
　　KEY=抽出文字列[0]
　　VAL=抽出文字列[1]
　　RES=RES&「| {KEY} | {VAL} |」&改行。
ここまで。
RES_RHYTHM_MACRO=RES
# ------------------------------------------
RES=""
Lの「<SYSTEM_FUNCTION>」から「</SYSTEM_FUNCTION>」を範囲切り取る。S_LISTに代入。
S_LISTを改行で区切って反復
　　対象を『/"(.+)".*\/\/\s+(.*)/』で正規表現マッチ。
　　もし、そうでなければ、続ける。
　　KEY=抽出文字列[0]
　　VAL=抽出文字列[1]
　　RES=RES&「| {KEY} | {VAL} |」&改行。
ここまで。
RES_UP=RES

# ------------------------------------------
# 参照できるシステムの値 - runner.rs
# ------------------------------------------
RES=""
L=「{SCRIPT_DIR}/runner.rs」を開く。
Lの「<SYSTEM_REF>」から「</SYSTEM_REF>」を範囲切り取る。S_LISTに代入。
S_LISTを改行で区切って反復
　　対象で「if cmd ==」が何文字目。
　　もし、それが0ならば、続ける。
　　対象の「if cmd ==」を「|」に置換。
　　「cmd ==」を「」に置換。
　　「"」を「」に置換。
　　『{』を「」に置換。
　　「||」を「/」に置換。
　　「// @ 」を「|」に置換。
　　トリム
　　S=それ。
　　RES=RES&S&"|"&改行。
ここまで。
RES_REF=RES

# ------------------------------------------
●(CMD_LISTを)コマンド変換処理とは
　　RESとは変数＝「」
　　CMD_LISTを改行で区切って反復
　　　　トリム。LINE=それ
　　　　LINEで「// @」が何文字目
　　　　もし、それ＝0ならば、続ける。
　　　　LINEから「=>」を切り取って、CMDに代入。
　　　　対象から「// @」を切り取る。
　　　　説明＝トリム(対象)。
　　　　CMD=CMDの「||」を「 / 」に置換。
　　　　CMD=CMDの「'\''」を「’」に置換。
　　　　CMD=CMDの「'|'」を「｜」に置換。
　　　　CMD=CMDの「|」を「 / 」に置換。
　　　　CMD=CMDの『\s{2,}』を「 」に正規表現置換。
　　　　CMD=CMDの「'」を「」に置換。
　　　　CMD=CMDの「"」を「」に置換。
　　　　CMD=トリム(CMD)
　　　　RES=RES&「| {CMD} | {説明} |」&改行
　　ここまで。
　　ＲＥＳを戻す。
ここまで。

MD=「
# テキスト音楽 サクラ(Rust版) コマンド一覧

## ストトン表記

| コマンド | 説明    |
|---------|--------|
{RES_SUTOTON}

## 1文字コマンド

| コマンド | 説明    |
|---------|--------|
{RES_1CHAR}

## 大文字コマンド

| コマンド | 説明    |
|---------|--------|
{RES_UP}

## 計算式で参照できる値

| コマンド | 説明    |
|---------|--------|
{RES_REF}


## マクロや音色など変数定義

- [🔗 Voice List and Macro](voice.md)

## リズムマクロ

| 変数名 | 値    |
|---------|--------|
{RES_RHYTHM_MACRO}


」

# command.md
MD=トリム(MD)
MDを表示。

MDを「{ROOT_DIR}/command.md」に保存。
# voice.md
「# Voice List

| Voice | NO |
|-------|----|
{RES_VOICE}
」を「{ROOT_DIR}/voice.md」に保存。

「ok.」と表示。
